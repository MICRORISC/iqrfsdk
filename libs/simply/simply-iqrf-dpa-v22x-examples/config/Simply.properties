# This file stores basic properties, which serves for configuring of 
# the newly created network objects.


# CONFIG FILES 
# Mapping of Java device interfaces to theirs used implementation classes
implClassesMapping.configFile = config/ImplMapping.xml

# Configuration file of connected networks settings. 
networkConnectionTypes.configFile = config/NetworkConnectionTypes.xml

# Configuration file of connected networks settings. 
networkSettings.configFile = config/NetworkSettings.xml



# DEVICE OBJECT
# Default capacity of result container.
deviceObject.resultsContainer.capacity = 10

# Maximal time[in ms] of existence each item in the container. 
# After that will be that item disposed from container. 
# 0 means not usage of this property
deviceObject.resultsContainer.maxTimeDuration = 0



# NETWORK LAYER (CDC, Serial, UDP, SPI)
# Network layer parameters

# Factory class.
networkLayer.factory.class = com.microrisc.simply.network.usbcdc.CDCNetworkLayerFactory
#networkLayer.factory.class = com.microrisc.simply.network.serial.v2.SerialNetworkLayerFactory
#networkLayer.factory.class = com.microrisc.simply.network.udp.UDPNetworkLayerFactory
#networkLayer.factory.class = com.microrisc.simply.network.spi.SPINetworkLayerFactory

# Network layer type.
networkLayer.type = cdc
#networkLayer.type = serial
#networkLayer.type = udp
#networkLayer.type = spi

# Port to connect to underlaying network.
networkLayer.type.cdc.port = auto

#networkLayer.type.serial.port = auto
#networkLayer.type.serial.baudrate = 19200

#networkLayer.type.udp.localaddress = 10.1.10.224
#networkLayer.type.udp.localport = 55000
#networkLayer.type.udp.remoteaddress = 10.1.30.76 
#networkLayer.type.udp.remoteport = 55300      
#networkLayer.type.udp.maxRecvPacketSize = 512 
#networkLayer.type.udp.receptionTimeout = 100

#networkLayer.type.spi.port = auto
###


# PROTOCOL LAYER
# DPA Peripherals to Device Interfaces mapping
# Parametric less constructor.
#dpa.perToDevIfaceMapper.factory.class = com.microrisc.simply.iqrf.dpa.v22x.examples.user_per.user_map.myadc.def.UserPerToDevIfaceMapperFactory
#dpa.perToDevIfaceMapper.factory.class = com.microrisc.simply.iqrf.dpa.v22x.examples.user_per.user_map.mydallas.def.UserPerToDevIfaceMapperFactory
#dpa.perToDevIfaceMapper.factory.class = com.microrisc.simply.iqrf.dpa.v22x.autonetwork.embedded.def.UserPerToDevIfaceMapperFactory
dpa.perToDevIfaceMapper.factory.class = com.microrisc.simply.iqrf.dpa.protocol.mapping.FileMapper

# Protocol mapping factory class - for user mapping only.
# Parametric less constructor.
#protocolLayer.protocolMapping.factory.class = com.microrisc.simply.iqrf.dpa.v22x.examples.user_per.user_map.myadc.def.UserProtocolMappingFactory
#protocolLayer.protocolMapping.factory.class = com.microrisc.simply.iqrf.dpa.v22x.examples.user_per.user_map.mydallas.def.UserProtocolMappingFactory
#protocolLayer.protocolMapping.factory.class = com.microrisc.simply.iqrf.dpa.v22x.autonetwork.embedded.def.UserProtocolMappingFactory
protocolLayer.protocolMapping.factory.class = com.microrisc.simply.iqrf.dpa.protocol.mapping.FileMapper

# Active only in case of use FileMapper class for mapping from file
protocolLayer.protocolMapping.mappingFile = config/UserPeripheralMappingAutonetwork.xml

# Message convertor.
# Constructor parameters: 
# 	1. protocol mapping object
protocolLayer.messageConvertor.class = com.microrisc.simply.iqrf.dpa.v22x.protocol.DPA_MessageConvertor

# Protocol layer class.
# Constructor parameters: 
# 	1. network layer object
#	2. message convertor object
protocolLayer.class = com.microrisc.simply.iqrf.dpa.v22x.protocol.DPA_ProtocolLayer




# CONNECTOR LAYER
# Factory class.
connector.factory.class = com.microrisc.simply.iqrf.dpa.connector.DPA_ConnectorFactory

# Connector type. 
# type: response-waiting
connector.type = responseWaiting

# Default timeout to wait for a response, in ms.
# Suitable for situation, where a client of the connector service doesn't specify 
# the maximal time of processing of a call request. If you have derived your Device 
# Object from StandardServicesDevice object and will be using it in a standard way, 
# i.e DIRECT calling of DI method ( not in a generic way ), changing of this 
# config. setting is useless, because StandardServicesDevice object has a default 
# value ( DEFAULT_WAITING_TIMEOUT ), which will be used for this purpose if you
# will not change it later by means of the WaitingTimeoutService.
connector.type.responseWaiting.responseTimeout = 10000

# Number of maximal attempts of sending request to underlaying network.
connector.type.responseWaiting.maxSendAttempts = 3

# Pause between subsequent attempts to send request to underlaying network [in miliseconds].
connector.type.responseWaiting.attemptPause = 0

# Minimal pause between sending 2 different requests to network [in miliseconds].
connector.type.responseWaiting.betweenSendPause = 0



# INITIALIZATION
# Type of initialization
initialization.type = dpa.fixed
#initialization.type = dpa.enumeration

# Fixed initialization
initialization.type.dpa.fixed.sourceFile = config/PeripheralDistribution.xml

# How to deal with bonded nodes
# Set [ > 0] to get bonded nodes, or [0] to ignore them.
initialization.type.dpa.fixed.involveBondedNodes = 1

# Number of attempts of getting bonded nodes from coordinator.
initialization.type.dpa.fixed.involveBondedNodes.num_attempts = 2

# Timeout [in ms] of operation of getting bonded nodes from coordinator. 
initialization.type.dpa.fixed.involveBondedNodes.timeout = 5000


# Enumeration initialization
# Getting peripherals from nodes.
# Number of attempts of getting peripherals from node.
#initialization.type.dpa.enumeration.getPeripheral.num_attempts = 2

# Timeout [in ms] of operation of getting peripherals from node. 
#initialization.type.dpa.enumeration.getPeripheral.timeout = 10000


# How to deal with bonded nodes
# Set [ > 0] to get bonded nodes, or [0] to ignore them.
#initialization.type.dpa.enumeration.involveBondedNodes = 1

# Number of attempts of getting bonded nodes from coordinator.
#initialization.type.dpa.enumeration.involveBondedNodes.num_attempts = 2

# Timeout [in ms] of operation of getting bonded nodes from coordinator. 
#initialization.type.dpa.enumeration.involveBondedNodes.timeout = 5000


# Discovery
# Set [ > 0] to do discovery process, or [0] to not to do.
initialization.type.dpa.discovery = 1

# Timeout [in ms] of operation of running discovery process. 
initialization.type.dpa.discovery.timeout = 20000

# TX power used in discovery process[0-7]. 
initialization.type.dpa.discovery.txPower = 6
